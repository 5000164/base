generator client {
  provider = "prisma-client-js"
  output   = "../../prismaClient"
}

datasource db {
  provider = "sqlite"
  url      = "file:../../app.db"
}

model Task {
  taskId          Int         @id @default(autoincrement()) @map("id")
  name            String
  status          Int
  estimate        Int?
  scheduledDate   Int?        @map("scheduled_date")
  statusChangedAt Int?        @map("status_changed_at")
  previousId      Int?        @map("previous_id")
  nextId          Int?        @map("next_id")
  nextTask        Task?       @relation("tasksTotasks_next_id", fields: [nextId], references: [taskId])
  previousTask    Task?       @relation("tasksTotasks_previous_id", fields: [previousId], references: [taskId])
  taskTracks      TaskTrack[]
  nextTasks       Task[]      @relation("tasksTotasks_next_id")
  previousTasks   Task[]      @relation("tasksTotasks_previous_id")

  @@map("tasks")
}

model TaskTrack {
  taskTrackId Int  @id @default(autoincrement()) @map("task_track_id")
  taskId      Int  @map("task_id")
  startAt     Int  @map("start_at")
  stopAt      Int? @map("stop_at")
  task        Task @relation(fields: [taskId], references: [taskId])

  @@map("task_tracks")
}

model Template {
  templateId    Int            @id @default(autoincrement()) @map("id")
  name          String
  templateTasks TemplateTask[]

  @@map("templates")
}

model TemplateTask {
  templateTaskId        Int            @id @default(autoincrement()) @map("id")
  templateId            Int?
  name                  String
  estimate              Int?
  previousId            Int?           @map("previous_id")
  nextId                Int?           @map("next_id")
  nextTemplateTask      TemplateTask?  @relation("template_tasksTotemplate_tasks_next_id", fields: [nextId], references: [templateTaskId])
  previousTemplateTask  TemplateTask?  @relation("template_tasksTotemplate_tasks_previous_id", fields: [previousId], references: [templateTaskId])
  template              Template?      @relation(fields: [templateId], references: [templateId])
  nextTemplateTasks     TemplateTask[] @relation("template_tasksTotemplate_tasks_next_id")
  previousTemplateTasks TemplateTask[] @relation("template_tasksTotemplate_tasks_previous_id")

  @@map("template_tasks")
}

model SequelizeMeta {
  name String @id
}
