generator client {
  provider = "prisma-client-js"
  output   = "../../prismaClient"
}

datasource db {
  provider = "sqlite"
  url      = "file:../../app.db"
}

model SequelizeMeta {
  name String @id
}

model task_tracks {
  task_track_id Int   @id @default(autoincrement())
  task_id       Int
  start_at      Int?
  stop_at       Int?
  task          tasks @relation(fields: [task_id], references: [id])
}

model tasks {
  id                                   Int           @id @default(autoincrement())
  name                                 String
  status                               Int
  estimate                             Int?
  actual                               Int?
  status_changed_at                    Int?
  previous_id                          Int?
  next_id                              Int?
  tasks_tasksTotasks_next_id           tasks?        @relation("tasksTotasks_next_id", fields: [next_id], references: [id])
  tasks_tasksTotasks_previous_id       tasks?        @relation("tasksTotasks_previous_id", fields: [previous_id], references: [id])
  task_tracks                          task_tracks[]
  other_tasks_tasksTotasks_next_id     tasks[]       @relation("tasksTotasks_next_id")
  other_tasks_tasksTotasks_previous_id tasks[]       @relation("tasksTotasks_previous_id")
}

model template_tasks {
  id                                                              Int              @id @default(autoincrement())
  templateId                                                      Int?
  name                                                            String
  estimate                                                        Int?
  previous_id                                                     Int?
  next_id                                                         Int?
  template_tasks_template_tasksTotemplate_tasks_next_id           template_tasks?  @relation("template_tasksTotemplate_tasks_next_id", fields: [next_id], references: [id])
  template_tasks_template_tasksTotemplate_tasks_previous_id       template_tasks?  @relation("template_tasksTotemplate_tasks_previous_id", fields: [previous_id], references: [id])
  templates                                                       templates?       @relation(fields: [templateId], references: [id])
  other_template_tasks_template_tasksTotemplate_tasks_next_id     template_tasks[] @relation("template_tasksTotemplate_tasks_next_id")
  other_template_tasks_template_tasksTotemplate_tasks_previous_id template_tasks[] @relation("template_tasksTotemplate_tasks_previous_id")
}

model templates {
  id                Int              @id @default(autoincrement())
  name              String
  status            Int
  status_changed_at Int?
  template_tasks    template_tasks[]
}
